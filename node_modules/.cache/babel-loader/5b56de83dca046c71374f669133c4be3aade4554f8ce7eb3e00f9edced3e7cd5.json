{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karth\\\\milestone\\\\food-app\\\\src\\\\components\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// CartContext.js\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n\n  // Add an item to the cart\n  const addToCart = item => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(cartItem => cartItem.id === item.id);\n      if (existingItem) {\n        return prevItems.map(cartItem => cartItem.id === item.id ? {\n          ...cartItem,\n          quantity: cartItem.quantity + item.quantity\n        } : cartItem);\n      } else {\n        return [...prevItems, {\n          ...item,\n          quantity: item.quantity\n        }];\n      }\n    });\n  };\n\n  // Remove an item from the cart\n  const removeFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n\n  // Update quantity of an item in the cart\n  const updateItemQuantity = (id, quantity) => {\n    setCartItems(prevItems => prevItems.map(item => item.id === id ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateItemQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n};\n_s2(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","addToCart","item","prevItems","existingItem","find","cartItem","id","map","quantity","removeFromCart","filter","updateItemQuantity","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCart","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/karth/milestone/food-app/src/components/CartContext.js"],"sourcesContent":["// CartContext.js\r\nimport React, { createContext, useContext, useState } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  // Add an item to the cart\r\n  const addToCart = (item) => {\r\n    setCartItems((prevItems) => {\r\n      const existingItem = prevItems.find((cartItem) => cartItem.id === item.id);\r\n      if (existingItem) {\r\n        return prevItems.map((cartItem) =>\r\n          cartItem.id === item.id\r\n            ? { ...cartItem, quantity: cartItem.quantity + item.quantity }\r\n            : cartItem\r\n        );\r\n      } else {\r\n        return [...prevItems, { ...item, quantity: item.quantity }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remove an item from the cart\r\n  const removeFromCart = (id) => {\r\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n  };\r\n\r\n  // Update quantity of an item in the cart\r\n  const updateItemQuantity = (id, quantity) => {\r\n    setCartItems((prevItems) =>\r\n      prevItems.map((item) =>\r\n        item.id === id ? { ...item, quantity } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart, updateItemQuantity }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error(\"useCart must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n};"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMS,SAAS,GAAIC,IAAI,IAAK;IAC1BF,YAAY,CAAEG,SAAS,IAAK;MAC1B,MAAMC,YAAY,GAAGD,SAAS,CAACE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;MAC1E,IAAIH,YAAY,EAAE;QAChB,OAAOD,SAAS,CAACK,GAAG,CAAEF,QAAQ,IAC5BA,QAAQ,CAACC,EAAE,KAAKL,IAAI,CAACK,EAAE,GACnB;UAAE,GAAGD,QAAQ;UAAEG,QAAQ,EAAEH,QAAQ,CAACG,QAAQ,GAAGP,IAAI,CAACO;QAAS,CAAC,GAC5DH,QACN,CAAC;MACH,CAAC,MAAM;QACL,OAAO,CAAC,GAAGH,SAAS,EAAE;UAAE,GAAGD,IAAI;UAAEO,QAAQ,EAAEP,IAAI,CAACO;QAAS,CAAC,CAAC;MAC7D;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,cAAc,GAAIH,EAAE,IAAK;IAC7BP,YAAY,CAAEG,SAAS,IAAKA,SAAS,CAACQ,MAAM,CAAET,IAAI,IAAKA,IAAI,CAACK,EAAE,KAAKA,EAAE,CAAC,CAAC;EACzE,CAAC;;EAED;EACA,MAAMK,kBAAkB,GAAGA,CAACL,EAAE,EAAEE,QAAQ,KAAK;IAC3CT,YAAY,CAAEG,SAAS,IACrBA,SAAS,CAACK,GAAG,CAAEN,IAAI,IACjBA,IAAI,CAACK,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGL,IAAI;MAAEO;IAAS,CAAC,GAAGP,IAC3C,CACF,CAAC;EACH,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEf,SAAS;MAAEE,SAAS;MAAES,cAAc;MAAEE;IAAmB,CAAE;IAAAf,QAAA,EACvFA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACpB,EAAA,CAtCWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAwCzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG/B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}